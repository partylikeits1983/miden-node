// This file is @generated by prost-build.
/// Represents a block header.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BlockHeader {
    /// Specifies the version of the protocol.
    #[prost(uint32, tag = "1")]
    pub version: u32,
    /// The hash of the previous blocks header.
    #[prost(message, optional, tag = "2")]
    pub prev_hash: ::core::option::Option<super::digest::Digest>,
    /// A unique sequential number of the current block.
    #[prost(fixed32, tag = "3")]
    pub block_num: u32,
    /// A commitment to an MMR of the entire chain where each block is a leaf.
    #[prost(message, optional, tag = "4")]
    pub chain_root: ::core::option::Option<super::digest::Digest>,
    /// A commitment to account database.
    #[prost(message, optional, tag = "5")]
    pub account_root: ::core::option::Option<super::digest::Digest>,
    /// A commitment to the nullifier database.
    #[prost(message, optional, tag = "6")]
    pub nullifier_root: ::core::option::Option<super::digest::Digest>,
    /// A commitment to all notes created in the current block.
    #[prost(message, optional, tag = "7")]
    pub note_root: ::core::option::Option<super::digest::Digest>,
    /// A commitment to a set of IDs of transactions which affected accounts in this block.
    #[prost(message, optional, tag = "8")]
    pub tx_hash: ::core::option::Option<super::digest::Digest>,
    /// A hash of a STARK proof attesting to the correct state transition.
    #[prost(message, optional, tag = "9")]
    pub proof_hash: ::core::option::Option<super::digest::Digest>,
    /// A commitment to all transaction kernels supported by this block.
    #[prost(message, optional, tag = "10")]
    pub kernel_root: ::core::option::Option<super::digest::Digest>,
    /// The time when the block was created.
    #[prost(fixed32, tag = "11")]
    pub timestamp: u32,
}
/// Represents a block inclusion proof.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlockInclusionProof {
    /// Block header associated with the inclusion proof.
    #[prost(message, optional, tag = "1")]
    pub block_header: ::core::option::Option<BlockHeader>,
    /// Merkle path associated with the inclusion proof.
    #[prost(message, optional, tag = "2")]
    pub mmr_path: ::core::option::Option<super::merkle::MerklePath>,
    /// The chain length associated with `mmr_path`.
    #[prost(fixed32, tag = "3")]
    pub chain_length: u32,
}
